;(function(exports) {
  var SimpleGame = function(autoFocus) {
    this.c = new Coquette(this, "simple-canvas", 2000, 450, "#5fba3b", autoFocus);

    // paramour
    this.c.entities.create(Person, { center: { x:450, y:400 }, color:"#099",
    collision: function(other) {
      new SimpleGame;
      //other.center.y = this.center.y; // follow the player
    },

    update: function(){
      this.size = { x:100, y:200 };
      for (var i = 0; i < 3; i++) {
        this.c.entities.create(Asteroid, {
          center: {
            x: 340
            y: 340
          }
        });
      }
    }
    });


    // player
    this.c.entities.create(Person, { center: { x:256, y:400 }, color:"#0093d8",
      update: function() {
        this.size = { x:19, y:100 };

        if (this.c.inputter.isDown(this.c.inputter.UP_ARROW)) {
          this.center.y -= 20.4;
          //this.center.y += 5.9;
        }
        if (this.c.inputter.isDown(this.c.inputter.LEFT_ARROW)) {
          this.center.x -= 10.4;
        }

      if (this.c.inputter.isDown(this.c.inputter.DOWN_ARROW)) {
        this.center.y += 10.4;
      }
      if (this.c.inputter.isDown(this.c.inputter.RIGHT_ARROW)) {
        this.center.x += 10.4;
      }
    },

      collision: function(other) {
        this.center.x = 100.4;
        //other.center.y = this.center.y; // follow the player
      }
    });
  };

  var Person = function(game, settings) {
    this.c = game.c;
    for (var i in settings) {
      this[i] = settings[i];
    }

    this.draw = function(ctx) {
      ctx.fillStyle = settings.color;
      ctx.fillRect(this.center.x - this.size.x / 2,
                   this.center.y - this.size.y / 2,
                   this.size.x,
                   this.size.y);
    };
  };

  exports.SimpleGame = SimpleGame;
})(this);
